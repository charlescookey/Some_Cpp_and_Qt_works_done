I chose the conversion of integer to roman numeral problem and i used c++ to solve this problem;
This solution can be considered beginner friendly as the most complex keyword used was the "switch"; 
I used switches to make cases for 1-19,20,30,40,50,60,70,80,90;
then 100,200,300,400,500,600,700,800,900;
then 1000,2000,300;
I stopped at 3000 because the test cases given didn't exceed 3999;
Switches are a bit like if statements but for multiple cases. 
So instead of make multiple if statements, you would make a single switch.
I used switches because i could separate the digits using the modulus(%) operator.
This operator(%) gives the remainder instead of the dividend.
For example 54/10 = 5.4; hence 5 remainder 4. 
So 54%10 would return 4, as this is remainder when divided.
This was the logic I employed in separating each variable to plug the individual digits into the switches.
So the switches would add I for 1, X for 10,D for 500,and M for 1000;
The template given was a string function so the answer that was returned has to be a string variable.
So i used the "+=" to add the roman numerals to the answer.
My solution failed some test cases, so i had to make changes to ensure it passed all the test cases.
It is also noteworthy that all cases in the switch must be followed by "break"; 
This would ensure it doesn't go the next case.
Also all switches had to have default, in the event that not of the cases were passed.
I used comments to explain in the code to explain better.

The solution had a run time of 4ms and took memory space of 8.4 mb
the code is pasted below;

class Solution {
public:
string answer = "";
string intToRoman(int num) {
    int b = num%1000;
    int c = b%100;
    if(num/1000 > 0){thousand(num/1000);}//for 1000,2000,300
    if(b/100 > 0){hunid(b/100);}//100,200,300,400...
    if(c/10 > 1){tensuper(c/10);}//20,30,40,50,60..
    if(c/10 == 1){unit(c);}else{unit(num%10);}//1-19.
    
return answer;
};
void unit(int x){
    switch(x){
        case 1 :
            answer+="I";
            break;
        case 2 :
            answer+="II";
            break;
        case 3 :
            answer+="III";
            break;
        case 4 :
            answer+="IV";
            break;
        case 5 :
            answer+="V";
            break;
        case 6 :
            answer+="VI";
            break;
        case 7 :
            answer+="VII";
            break;
        case 8 :
            answer+="VIII";
            break;
        case 9 :
            answer+="IX";
            break;
        case 10 :
            answer+="X";
            break;
        case 11 :
            answer+="XI";
            break;
        case 12 :
            answer+="XII";
            break;
        case 13 :
            answer+="XIII";
            break;
        case 14 :
            answer+="XIV";
            break;
        case 15 :
            answer+="XV";
            break;
        case 16 :
            answer+="XVI";
            break;
        case 17 :
            answer+="XVII";
            break;
        case 18 :
            answer+="XVIII";
            break;
        case 19 :
            answer+="XIX";
            break;
        default:
            answer+="";//incase it gets here it, nothing is added to the answer.
};};

void tensuper(int x){
     switch(x){
        case 2 :
            answer+="XX";
            break;
        case 3 :
            answer+="XXX";
            break;
        case 4 :
            answer+="XL";
            break;
        case 5 :
            answer+="L";
            break;
        case 6 :
            answer+="LX";
            break;
        case 7 :
            answer+="LXX";
            break;
        case 8 :
            answer+="LXXX";
            break;
        case 9 :
            answer+="XC";
            break;
        default:
            answer+="";
};};

void hunid(int x){
     switch(x){
        case 1 :
            answer+="C"; 
            break;
        case 2 :
            answer+="CC";
            break;
        case 3 :
            answer+="CCC";
            break;
        case 4 :
            answer+="CD";
            break;
        case 5 :
            answer+="D";
            break;
        case 6 :
            answer+="DC";
            break;
        case 7 :
            answer+="DCC";
            break;
        case 8 :
            answer+="DCCC";
            break;
        case 9 :
            answer+="CM";
            break;
        default:
            answer+="";
};};
    
void thousand(int x){
     switch(x){
        case 1 :
            answer+="M"; 
            break;
        case 2 :
            answer+="MM";
            break;
        case 3 :
            answer+="MMM";
            break;
        default:
            answer+="";
};};
};
