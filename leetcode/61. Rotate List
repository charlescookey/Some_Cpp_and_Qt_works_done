/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == nullptr || head->next == nullptr)return head;
        int size = 2;
        head = rotating(head , size);
        if(size == 2 && k == 0 ){
            head = rotating(head , size);
            return head;
        }
        k%= size;k--;
        if(k == -1) k+= size;
        for(int i =0 ;i<k ;i++){
            head = rotating(head,size);
        }        
        return head;
    }
    
    ListNode* rotating(ListNode* head ,  int &size){
        ListNode *temp = head;
        while(temp->next->next != nullptr){
            temp = temp->next;
            size++;
        }
        ListNode *newhead = temp->next;
        temp->next = nullptr;
        newhead->next = head;
        return newhead;
    }
};
