class Solution {
public:
    map<pair<int , int> , bool> visited{};
    vector<vector<char>> image;
    
    int numIslands(vector<vector<char>>& grid) {
        int ans =0;
        image = grid;
        for(int i=0 ; i < grid.size() ; i++){
            for(int j = 0 ; j < grid[0].size() ; j++){
                if(grid[i][j] == '0')continue;
                if(visited.count({i , j}) >0)continue;
                ans++;
                DFS_visit( i ,j ); 
            }
        }
        return ans;
        
    }
    
    void  DFS_visit(int sr, int sc){
        if(sr < 0 || sr >= image.size())return;
        if(sc < 0 || sc >= image[0].size())return;
        if(visited.count({sr , sc}) >0)return;
        if(image[sr][sc] == '0')return;
        
        visited[{sr , sc}] = true;
        
        DFS_visit( sr-1 ,sc );
        DFS_visit( sr+1 ,sc );
        DFS_visit( sr ,sc-1 );
        DFS_visit( sr ,sc+1 );   
    }
};
