class Solution {
public:
    bool makesquare(vector<int>& matchsticks) {
        float sum =0;
        for(int i: matchsticks){
            sum += i;
        }
        
        float dividend = sum /4;
        
        if(dividend != (int)dividend)return false;
        
        vector<int> sides(4 , dividend);
        
        std::sort(matchsticks.rbegin() , matchsticks.rend());
        
        return backtrack(0 , matchsticks , sides);
    }
    
    int backtrack(int time , vector<int>& sticks , vector<int>& q){
        if(time == sticks.size()){
            return q[0] == 0 && q[1] == 0 && q[2] == 0 && q[3] ==0;
        }
        
        for(int i =0; i < 4 ; i++){
            if(sticks[time] > q[i])continue;
            q[i] -= sticks[time];
            
            if(backtrack(time + 1 , sticks , q))return true;
            
            q[i] += sticks[time];
        }
        return false;
    }
};
