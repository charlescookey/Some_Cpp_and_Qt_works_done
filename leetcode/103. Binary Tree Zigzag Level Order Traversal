/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans{};
        vector<TreeNode*> frontier{};
        
        if(!root)return {};
        
        frontier.push_back(root);
        int count =1;
        
        while(!frontier.empty()){
            vector<TreeNode*> next{};
            vector<int> temp{};
            
            for(TreeNode* a : frontier){
                if(a->left){next.push_back(a->left);}
                if(a->right){next.push_back(a->right);}
                temp.push_back(a->val);
            }
            if(count%2 ==0)std::reverse(temp.begin() , temp.end());
            count++;
            
            ans.push_back(temp);
            frontier = next;
        }
        return ans;
    }
};
