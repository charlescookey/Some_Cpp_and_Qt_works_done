class Solution {
public:
    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {
        int direction =0;
        set<vector<int>> _set(obstacles.begin() , obstacles.end());
        int x =0;
        int y =0;
        int ans =0;
        int temp;

        for(int a : commands){
            if(a == -1)direction += 1;
            else if(a == -2) direction += 3;
            else{
                direction %= 4;
                check(x,y,direction,a,_set);
            }
            ans = max(ans, (int)(pow(x,2) + pow(y,2)));
        }
        return ans;
    }

    void check(int &x, int &y, int direction , int distance,set<vector<int>>& _set ){
        
        while(distance > 0){
            distance--;
            if(direction == 0){
                if(!_set.contains({x,y+1}))y++;
                else break;
            }
            else if(direction == 1){
                if(!_set.contains({x+1,y}))x++;
                else break;
            }
            else if(direction == 2){
                if(!_set.contains({x,y-1}))y--;
                else break;
            }                
            else if(direction == 3){
                if(!_set.contains({x-1,y}))x--;
                else break;
            }
        }
    }
};
