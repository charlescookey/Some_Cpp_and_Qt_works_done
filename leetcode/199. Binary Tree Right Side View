/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans{};
        BFS(root , ans);
        return ans;
    }
    
    void BFS(TreeNode* root , vector<int>& ans){
        if(!root)return;
        vector<TreeNode*> frontier{};
        frontier.push_back(root);
        while(!frontier.empty()){
            ans.push_back(frontier.back()->val);
            vector<TreeNode*> next{};
            for(TreeNode* a : frontier){
                if(a->left)next.push_back(a->left);
                if(a->right)next.push_back(a->right);
            }
            frontier = next;
        }
    }
};
