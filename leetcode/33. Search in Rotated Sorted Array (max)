class Solution {
public:
    int search(vector<int>& nums, int target) 
    {
        int max = findmax(nums);

        if(target >= nums[0]){
            return binSearch(nums, target, 0 , max);
        }
        return binSearch(nums, target, max+1 , nums.size() -1);
    }

    int binSearch(vector<int>& nums, int target, int l , int r){
        while(r >= l){

            int mid = l + (r-l)/2;
            if(nums[mid] == target){
                return mid;
            }else if(nums[mid] >target){
                r = mid-1;
            }
            else if(nums[mid] < target){
                l = mid+1;
            }

        }
        return -1;
    } 

    int findmax(vector<int>& nums){
        int l =0;
        int r = nums.size()-1;

        while(r > l){

            int mid = l + (r-l)/2;
            if(mid == nums.size() - 1)return mid;

            if(nums[mid] > nums[mid+1]){
                return mid;
            }
            
            if(nums[mid] < nums[l]){
                r = mid -1;
            }else{
                l = mid + 1;
            }
            

        }
        return r;

    }

};
