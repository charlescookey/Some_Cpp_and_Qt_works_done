/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        if(!root)return {};
        vector<TreeNode*> frontier{};
        vector<int> ans{};
        frontier.push_back(root);

        while(!frontier.empty()){
            vector<TreeNode*> temp{};
            int max_level = INT_MIN;

            for(TreeNode* curr : frontier){
                if(curr->left)temp.push_back(curr->left);
                if(curr->right)temp.push_back(curr->right);  
                max_level = std::max(max_level , curr->val);
            }

            frontier = temp;
            ans.push_back(max_level);
        }
        return ans;
        
    }
};
