So we start from the back and find the answers.
Here's the eexplanation 
https://www.youtube.com/watch?v=W8N8EeWDwKs



class Solution {
public:
    int maxResult(vector<int>& nums, int k) {
        std::deque<int> dq{};
        std::vector<int> vec(nums.size() ,0);
        
        vec[nums.size()-1] = nums[nums.size() -1];
        dq.push_back(nums.size()-1);
        
        for(int i = nums.size() -2 ; i >= 0 ; i--){
            if(!dq.empty() && dq.front() > i+k)dq.pop_front();
            
            vec[i] = nums[i] + vec[dq.front()];
            
            while(!dq.empty() && vec[dq.back()] < vec[i])dq.pop_back();
            
            dq.push_back(i);
        }
        
        return vec[0];
    }
};
