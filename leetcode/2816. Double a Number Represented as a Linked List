/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* doubleIt(ListNode* head) {
        int rem = remainder(head);

        if(rem > 0){
            return new ListNode(rem , head);
        } 
        return head;

    }

    int remainder(ListNode* curr){
        if(curr == nullptr)return 0;

        int rem = remainder(curr->next);

        rem +=  curr->val * 2;
        curr->val = rem%10;

        return rem/10;
    }
};
