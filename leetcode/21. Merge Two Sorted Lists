RECURSIVE

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode *head = nullptr;
        
        if(list1 == nullptr)return list2;
        if(list2 == nullptr)return list1;
        
        if(list1->val <= list2->val){
            head = list1;
            head->next = mergeTwoLists(list1->next , list2);
        }else{
            head = list2;
            head->next = mergeTwoLists(list1 , list2->next);
        }
        
        return head;
    }
};

ITERATIVE
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode *head = nullptr;
        ListNode *temp = nullptr;
        
        if(list1 == nullptr)return list2;
        if(list2 == nullptr)return list1;
        
        if(list1->val <= list2->val){
            head = list1;
            list1 = list1->next;
        }else{
            head = list2;
            list2 = list2->next;
        }
        temp = head;
        while(true){
            if(list1 == nullptr){
                temp->next = list2;
                break;
            }
            if(list2 == nullptr){
                temp->next = list1;
                break;
            }
            if(list1->val <= list2->val){
                temp->next = list1;
                list1 = list1->next;
            }else{
                temp->next = list2;
                list2 = list2->next;
            }
            temp = temp->next;
        }
        
        return head;
    }
};
