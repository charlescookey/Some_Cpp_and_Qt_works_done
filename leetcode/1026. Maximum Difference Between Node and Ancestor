/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans =0;
    int maxAncestorDiff(TreeNode* root) {
        dfs(root , INT_MIN , INT_MAX);
        return ans;
    }

    void dfs(TreeNode* curr, int max , int min){
        if(!curr){
            ans = std::max(ans , max-min);
            return;
        }

        max = std::max(curr->val , max);
        min = std::min(curr->val , min);

        dfs(curr->left, max , min);
        dfs(curr->right, max , min);
    }
};
