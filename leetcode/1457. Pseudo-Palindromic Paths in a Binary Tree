/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans =0;
    int pseudoPalindromicPaths (TreeNode* root) {
        vector<int> count(10,0);
        dfs(root, count);
        return ans;
    }

    void dfs(TreeNode* curr , vector<int> &count){
        if(!curr){  
            return;
        }

        count[curr->val]++;

        dfs(curr->left , count);
        dfs(curr->right , count);

        if(!curr->left && !curr->right && psuedo_palindrome(count)){
            ans++;
        } 
        count[curr->val]--;
    }

    bool psuedo_palindrome(const vector<int> &count){
        int odd_count =0;
        for(const int &i : count){
            if(i %2 !=0){
                odd_count++;
                if(odd_count >1)return false;
            }
        }
        return true;
    }

};
