/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        vector<TreeNode*> frontier{};
        vector<TreeNode*> next{};

        frontier.push_back(root);
        TreeNode* ans = root;

        while(!frontier.empty()){
            next.clear();
            for(TreeNode* curr : frontier){
                if(curr->left)next.push_back(curr->left);
                if(curr->right)next.push_back(curr->right);
            }
            frontier = next;
            ans = frontier[0];
        }
        return ans->val;        
    }
};
