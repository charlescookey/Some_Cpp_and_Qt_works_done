WAY BETTER

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        std::vector<int> freqS(256 ,  -1);
        std::vector<int> freqT(256 ,  -1);

        
        for(int i = 0 ; i < s.size() ; i++){
            if(freqS[s[i]] != freqT[t[i]]){
                return false;
            }
            freqS[s[i]] = i;
            freqT[t[i]] = i;

        }
        return true;   
    }
};


class Solution {
public:
    bool isIsomorphic(string s, string t) {
        std::map<char , char> hashmap{};
        std::set<char> mapped{};
        
        for(int i = 0 ; i < s.size() ; i++){
            if(hashmap.count(s[i]) > 0){
                if(hashmap[s[i]] != t[i])return false;
            }else{
                if(mapped.count(t[i]) > 0)return false;
                hashmap[s[i]] = t[i];
                mapped.insert(t[i]);
            }            
        }
        return true;   
    }
};

