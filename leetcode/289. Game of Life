class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        for(int i= 0 ; i < board.size() ; i++){
            for(int j =0 ; j < board[0].size() ; j++){
                checkNeighbors(i , j , board);
            }
        }
        
        for(int i= 0 ; i < board.size() ; i++){
            for(int j =0 ; j < board[0].size() ; j++){
                if(board[i][j] == 2)board[i][j] = 1;
                else if(board[i][j] == 3)board[i][j] =0;
            }
        }
    };
    void checkNeighbors(int i , int j , vector<vector<int>>& board){
        int a = countNeighbors(i , j , board);
        
        if(board[i][j] == 0 && a ==3){
            board[i][j] = 2;
        }
        if(board[i][j] ==1 && a >3 ){
            board[i][j] = 3;
        }else if(board[i][j] ==1 && a < 2){
            board[i][j] =3;
        }
    }
    
    int countNeighbors(int i , int j , const vector<vector<int>>& board){
        int count =0;
        if(i> 0 && j >0){
            count+= board[i-1][j-1]%2;
        }
        if(i> 0){
            count+= board[i-1][j]%2;
        }
        if(i> 0 && j < board[0].size() -1 ){
            count+= board[i-1][j+1]%2;
        }
        if(j > 0){
            count+= board[i][j-1]%2;
        }
        if(j < board[0].size() -1){
            count+= board[i][j+1]%2;
        }
        if(i < board.size() -1 && j >0 ){
            count+= board[i+1][j-1]%2;
        }
        if(i < board.size() -1){
            count+= board[i+1][j]%2;
        }
        if(i < board.size() -1 && j < board[0].size() -1){
            count+= board[i+1][j+1]%2;
        }
        return count;
    }
    //0 that turns to a 1 = 2
    //1 that turns to a 0 = 3
};
