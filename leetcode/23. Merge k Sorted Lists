/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        ListNode* dummyhead = new ListNode(0);
        ListNode* curr = dummyhead;
        
        while(true){
            int max = INT_MAX;
            int index =-1;
            for(int i =0 ; i < lists.size() ; i++){           
                if(lists[i]){
                    if(lists[i]->val < max){
                        max = lists[i]->val;
                        index =i;
                    }
                }
            }
            if(index != -1){
                curr->next = lists[index];
                curr = curr->next;
                lists[index] = lists[index]->next;
            }else{
                break;
            }
            
        }
        return dummyhead->next;
    }
};
