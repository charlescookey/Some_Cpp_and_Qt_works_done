class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int row = img.size();
        int col = img[0].size();
        vector<vector<int>> ans(row , vector<int>(col));

        for(int i =0; i < row ; i++){
            for(int j =0; j < col ; j++){

                double sum =0;
                int count =1;

                sum += img[i][j];

                if(i > 0){
                    sum += img[i-1][j];
                    count++;
                };
                if(i < row -1){
                    sum += img[i+1][j];
                    count++;
                };

                if(j > 0){
                    sum += img[i][j-1];
                    count++;
                }

                if(j < col-1){
                    sum += img[i][j+1];
                    count++;
                }

                if(i >0 && j > 0){
                    sum += img[i-1][j-1];
                    count++;
                }
                if(i < row -1 && j < col -1){
                    sum += img[i+1][j+1];
                    count++;
                }

                if(i >0 && j < col -1){
                    sum += img[i-1][j+1];
                    count++;
                }
                if(i < row -1 && j>0){
                    sum += img[i+1][j-1];
                    count++;
                }

                double temp = sum/count;

                ans[i][j]  = std::floor(temp);
            }
        }
        return ans;
    }
};
