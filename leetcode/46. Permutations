class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> answer{};
        std::map<vector<int> , int> hashmap{};

        recursive_permute(hashmap , answer , nums);
        return answer;
    }

    void recursive_permute(std::map<vector<int> , int> &hashmap , vector<vector<int>> &answer , vector<int>& nums){
        if(hashmap.count(nums) > 0){
            return;
        }
        hashmap[nums] =  1;
        answer.push_back(nums);
        for(int i =1 ; i < nums.size() ; i++){
            std::swap(nums[0] , nums[i]);
            recursive_permute(hashmap , answer , nums);
            std::swap(nums[0] , nums[i]);
        }
    };
};
