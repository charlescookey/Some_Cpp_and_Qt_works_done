/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string ans;

    string smallestFromLeaf(TreeNode* root) {
        ans = "";
        dfs(root, "");
        return ans;
    }

    void dfs(TreeNode* curr, string temp){
        if(curr == nullptr){
            return;
        }

        temp = char(curr->val + 97) + temp;


        if(curr->left == nullptr && curr->right == nullptr){
            if(ans == "" || ans > temp){
                ans = temp;
            }
            return;
        }

        dfs(curr->left , temp);
        dfs(curr->right , temp);
    }
};
